<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Toolkit</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Toolkit.Converters">
            <summary>
            Set of helpers to convert between data types and notations.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Converters.ToFileSizeString(System.Int64)">
            <summary>
            Translate numeric file size in bytes to a human-readable shorter string format.
            </summary>
            <param name="size">File size in bytes.</param>
            <returns>Returns file size short string.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Extensions.ArrayExtensions">
            <summary>
            Helpers for working with arrays.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Extensions.ArrayExtensions.Fill``1(``0[0:,0:],``0,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Fills elements of a rectangular array at the given position and size to a specific value.
            Ranges given will fill in as many elements as possible, ignoring positions outside the bounds of the array.
            </summary>
            <typeparam name="T">The element type of the array.</typeparam>
            <param name="array">The source array.</param>
            <param name="value">Value to fill with.</param>
            <param name="row">Row to start on (inclusive, zero-index).</param>
            <param name="col">Column to start on (inclusive, zero-index).</param>
            <param name="width">Positive width of area to fill.</param>
            <param name="height">Positive height of area to fill.</param>
        </member>
        <member name="M:Microsoft.Toolkit.Extensions.ArrayExtensions.GetRow``1(``0[0:,0:],System.Int32)">
            <summary>
            Yields a row from a rectangular array.
            </summary>
            <typeparam name="T">The element type of the array.</typeparam>
            <param name="rectarray">The source array.</param>
            <param name="row">Row record to retrieve, 0-based index.</param>
            <returns>Yielded row.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Extensions.ArrayExtensions.GetColumn``1(``0[0:,0:],System.Int32)">
            <summary>
            Yields a column from a rectangular array.
            </summary>
            <typeparam name="T">The element type of the array.</typeparam>
            <param name="rectarray">The source array.</param>
            <param name="column">Column record to retrieve, 0-based index.</param>
            <returns>Yielded column.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Extensions.ArrayExtensions.GetColumn``1(``0[][],System.Int32)">
            <summary>
            Yields a column from a jagged array.
            An exception will be thrown if the column is out of bounds, and return default in places where there are no elements from inner arrays.
            Note: There is no equivalent GetRow method, as you can use array[row] to retrieve.
            </summary>
            <typeparam name="T">The element type of the array.</typeparam>
            <param name="rectarray">The source array.</param>
            <param name="column">Column record to retrieve, 0-based index.</param>
            <returns>Yielded enumerable of column elements for given column, and default values for smaller inner arrays.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Extensions.ArrayExtensions.ToArrayString``1(``0[])">
            <summary>
            Returns a simple string representation of an array.
            </summary>
            <typeparam name="T">The element type of the array.</typeparam>
            <param name="array">The source array.</param>
            <returns>String representation of the array.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Extensions.ArrayExtensions.ToArrayString``1(``0[][])">
            <summary>
            Returns a simple string representation of a jagged array.
            </summary>
            <typeparam name="T">The element type of the array.</typeparam>
            <param name="mdarray">The source array.</param>
            <returns>String representation of the array.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Extensions.ArrayExtensions.ToArrayString``1(``0[0:,0:])">
            <summary>
            Returns a simple string representation of a rectangular array.
            </summary>
            <typeparam name="T">The element type of the array.</typeparam>
            <param name="rectarray">The source array.</param>
            <returns>String representation of the array.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Extensions.StringExtensions">
            <summary>
            Helpers for working with strings and string representations.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Extensions.StringExtensions.PhoneNumberRegex">
            <summary>
            Regular expression for matching a phone number.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Extensions.StringExtensions.CharactersRegex">
            <summary>
            Regular expression for matching a string that contains only letters.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Extensions.StringExtensions.EmailRegex">
            <summary>
            Regular expression for matching an email address.
            </summary>
            <remarks>General Email Regex (RFC 5322 Official Standard) from emailregex.com.</remarks>
        </member>
        <member name="F:Microsoft.Toolkit.Extensions.StringExtensions.RemoveHtmlTagsRegex">
            <summary>
            Regular expression of HTML tags to remove.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Extensions.StringExtensions.RemoveHtmlCommentsRegex">
            <summary>
            Regular expression for removing comments from HTML.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Extensions.StringExtensions.RemoveHtmlScriptsRegex">
            <summary>
            Regular expression for removing scripts from HTML.
            </summary>
        </member>
        <member name="F:Microsoft.Toolkit.Extensions.StringExtensions.RemoveHtmlStylesRegex">
            <summary>
            Regular expression for removing styles from HTML.
            </summary>
        </member>
        <member name="M:Microsoft.Toolkit.Extensions.StringExtensions.IsEmail(System.String)">
            <summary>
            Determines whether a string is a valid email address.
            </summary>
            <param name="str">The string to test.</param>
            <returns><c>true</c> for a valid email address; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Extensions.StringExtensions.IsDecimal(System.String)">
            <summary>
            Determines whether a string is a valid decimal number.
            </summary>
            <param name="str">The string to test.</param>
            <returns><c>true</c> for a valid decimal number; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Extensions.StringExtensions.IsNumeric(System.String)">
            <summary>
            Determines whether a string is a valid integer.
            </summary>
            <param name="str">The string to test.</param>
            <returns><c>true</c> for a valid integer; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Extensions.StringExtensions.IsPhoneNumber(System.String)">
            <summary>
            Determines whether a string is a valid phone number.
            </summary>
            <param name="str">The string to test.</param>
            <returns><c>true</c> for a valid phone number; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Extensions.StringExtensions.IsCharacterString(System.String)">
            <summary>
            Determines whether a string contains only letters.
            </summary>
            <param name="str">The string to test.</param>
            <returns><c>true</c> if the string contains only letters; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Extensions.StringExtensions.ToSafeString(System.Object)">
            <summary>
            Returns a string representation of an object.
            </summary>
            <param name="value">The object to convert.</param>
            <returns>String representation of the object.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Extensions.StringExtensions.DecodeHtml(System.String)">
            <summary>
            Returns a string with HTML comments, scripts, styles, and tags removed.
            </summary>
            <param name="htmlText">HTML string.</param>
            <returns>Decoded HTML string.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Extensions.StringExtensions.FixHtml(System.String)">
            <summary>
            Returns a string with HTML comments, scripts, and styles removed.
            </summary>
            <param name="html">HTML string to fix.</param>
            <returns>Fixed HTML string.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Extensions.StringExtensions.Truncate(System.String,System.Int32)">
            <summary>
            Truncates a string to the specified length.
            </summary>
            <param name="value">The string to be truncated.</param>
            <param name="length">The maximum length.</param>
            <returns>Truncated string.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Extensions.StringExtensions.AsFormat(System.String,System.Object[])">
            <summary>
            Provide better linking for resourced strings.
            </summary>
            <param name="format">The format of the string being linked.</param>
            <param name="args">The object which will receive the linked String.</param>
            <returns>Truncated string.</returns>
        </member>
        <member name="M:Microsoft.Toolkit.Extensions.StringExtensions.Truncate(System.String,System.Int32,System.Boolean)">
            <summary>
            Truncates a string to the specified length.
            </summary>
            <param name="value">The string to be truncated.</param>
            <param name="length">The maximum length.</param>
            <param name="ellipsis"><c>true</c> to add ellipsis to the truncated text; otherwise, <c>false</c>.</param>
            <returns>Truncated string.</returns>
        </member>
        <member name="T:Microsoft.Toolkit.Helpers.NotifyTaskCompletion`1">
            <summary>
            Helper class to wrap around a Task to provide more information usable for UI databinding scenarios. As discussed in MSDN Magazine: https://msdn.microsoft.com/magazine/dn605875.
            </summary>
            <typeparam name="TResult">Type of result returned by task.</typeparam>
        </member>
        <member name="M:Microsoft.Toolkit.Helpers.NotifyTaskCompletion`1.#ctor(System.Threading.Tasks.Task{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Toolkit.Helpers.NotifyTaskCompletion`1"/> class.
            </summary>
            <param name="task">Task to wait on.</param>
        </member>
        <member name="P:Microsoft.Toolkit.Helpers.NotifyTaskCompletion`1.Task">
            <summary>
            Gets the task that is being waited on.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Helpers.NotifyTaskCompletion`1.TaskCompletion">
            <summary>
            Gets the task wrapper task.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Helpers.NotifyTaskCompletion`1.Result">
            <summary>
            Gets the result of the given task.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Helpers.NotifyTaskCompletion`1.Status">
            <summary>
            Gets the status of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Helpers.NotifyTaskCompletion`1.IsCompleted">
            <summary>
            Gets a value indicating whether the task is completed.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Helpers.NotifyTaskCompletion`1.IsNotCompleted">
            <summary>
            Gets a value indicating whether the task is not completed.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Helpers.NotifyTaskCompletion`1.IsSuccessfullyCompleted">
            <summary>
            Gets a value indicating whether the task was successfully completed.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Helpers.NotifyTaskCompletion`1.IsCanceled">
            <summary>
            Gets a value indicating whether the task was cancelled.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Helpers.NotifyTaskCompletion`1.IsFaulted">
            <summary>
            Gets a value indicating whether there was an error with the task.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Helpers.NotifyTaskCompletion`1.Exception">
            <summary>
            Gets the exception which occured on the task (if one occurred).
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Helpers.NotifyTaskCompletion`1.InnerException">
            <summary>
            Gets the inner exception of the task.
            </summary>
        </member>
        <member name="P:Microsoft.Toolkit.Helpers.NotifyTaskCompletion`1.ErrorMessage">
            <summary>
            Gets the error message of the task.
            </summary>
        </member>
        <member name="E:Microsoft.Toolkit.Helpers.NotifyTaskCompletion`1.PropertyChanged">
            <summary>
            PropertyChanged event.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Helpers.Singleton`1">
             <summary>
             Provides an easy-to-use thread-safe Singleton Pattern via <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2">ConcurrentDictionary</see>.
             </summary>
             <typeparam name="T">The type to be used for creating the Singleton instance.</typeparam>
             <example>
             Use by adding a static property to your class for a traditional access pattern:
             <code>
             // Setup Singleton
             public static class MyClass {
                 public static MyClass Instance => Singleton&lt;MyClass&gt;.Instance;
            
                 public void MyMethod() { }
             }
            
             // Use Singleton Instance
             MyClass.Instance.MyMethod();
             </code>
             </example>
        </member>
        <member name="P:Microsoft.Toolkit.Helpers.Singleton`1.Instance">
            <summary>
            Gets the instance of the Singleton class.
            </summary>
        </member>
        <member name="T:Microsoft.Toolkit.Collections.IIncrementalSource`1">
            <summary>
            This interface represents a data source whose items can be loaded incrementally.
            </summary>
            <typeparam name="TSource">Type of collection element.</typeparam>
        </member>
        <member name="M:Microsoft.Toolkit.Collections.IIncrementalSource`1.GetPagedItemsAsync(System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            This method is invoked everytime the view need to show more items. Retrieves items based on <paramref name="pageIndex"/> and <paramref name="pageSize"/> arguments.
            </summary>
            <param name="pageIndex">
            The zero-based index of the page that corresponds to the items to retrieve.
            </param>
            <param name="pageSize">
            The number of <typeparamref name="TSource"/> items to retrieve for the specified <paramref name="pageIndex"/>.
            </param>
            <param name="cancellationToken">
            Used to propagate notification that operation should be canceled.
            </param>
            <returns>
            Returns a collection of <typeparamref name="TSource"/>.
            </returns>
        </member>
    </members>
</doc>
